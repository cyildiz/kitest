<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testkapitel on</title><link>https://ki-vorlesung.github.io/kitest/tbd/</link><description>Recent content in Testkapitel on</description><generator>Hugo -- gohugo.io</generator><language>de-DE</language><atom:link href="https://ki-vorlesung.github.io/kitest/tbd/index.xml" rel="self" type="application/rss+xml"/><item><title>Test der verschiedenen Markdown-Elemente</title><link>https://ki-vorlesung.github.io/kitest/tbd/testseite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ki-vorlesung.github.io/kitest/tbd/testseite/</guid><description>Standard-Markdown Stichpunkte Lorem ipsum dolor sit amet, consetetur sadipscing elitr, Lorem ipsum dolor sit amet, consetetur sadipscing elitr, Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore &amp;hellip; a) sed diam nonumy eirmod tempor invidunt ut labore et dolore &amp;hellip; b) sed diam nonumy eirmod tempor invidunt ut labore et dolore &amp;hellip; magna aliquyam erat, sed diam voluptua.</description></item><item><title>Test2: Ordner statt Datei</title><link>https://ki-vorlesung.github.io/kitest/tbd/test2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ki-vorlesung.github.io/kitest/tbd/test2/</guid><description>Lokale Abbildungen mit Markdown Lokale Abbildungen mit Shortcodes Bildunterschrift Achtung: Scheinbar muss der Pfad in einem Ordner liegen, der den selben Namen wie die referenzierende Markdown-Datei hat. Im Beispiel: Die Seite heißt tbd/testseite.md und referenziert eine Abbildung images/somefig.png. Dann muss diese im Ordner tbd/testseite/images/somefig.png liegen. Damit funktioniert das direkte Rendering in Github/Gitlab nicht mehr!
Anmerkung: Lt. der Doku sind die folgenden Strukturen äquivalent:
content/ |___ _index.md &amp;lt;= mit Unterstrich (Chapter) |___ mypage.</description></item><item><title>Test3: Pure HTML</title><link>https://ki-vorlesung.github.io/kitest/tbd/test3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ki-vorlesung.github.io/kitest/tbd/test3/</guid><description>Mit Pandoc HTML erzeugen und in Hugo einbinden Leeres Pandoc-Template body.html erzeugen, Inhalt: eine einzige Zeile mit $body Aus einer Markdown-Datei eine self-contained HTML-Datei machen: pandoc --template body.html --self-contained --standalone index.md -o test3.html Der neuen HTML-Datei einen YAML-Header geben, sonst taucht das Ergebnis nicht im Menü auf! Vorteil: Bei diesem Vorgehen muss man keine Rücksicht auf Ordnerstrukturen von Hugo nehmen, die Abbildungen etc. sind bereits in das HTML eingebettet.</description></item><item><title>Test eines spezifischen Templates</title><link>https://ki-vorlesung.github.io/kitest/tbd/test4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ki-vorlesung.github.io/kitest/tbd/test4/</guid><description>Standard-Markdown Stichpunkte Lorem ipsum dolor sit amet, consetetur sadipscing elitr, Lorem ipsum dolor sit amet, consetetur sadipscing elitr, Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore &amp;hellip; a) sed diam nonumy eirmod tempor invidunt ut labore et dolore &amp;hellip; b) sed diam nonumy eirmod tempor invidunt ut labore et dolore &amp;hellip; magna aliquyam erat, sed diam voluptua.</description></item></channel></rss>